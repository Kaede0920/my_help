#!/usr/bin/env ruby
require 'thor'
require 'my_help'
require 'colorize'
require 'command_line/global'

class MyCLI < Thor
  desc('setup', 'set up the test database')
  def setup(*args)
    $control = MyHelp::Control.new()
  end

  desc "list [HELP] [ITEM]", "list all helps, specific HELP, or ITEM"
  def list(*args)
    invoke :setup
    file = args[0]
    item = args[1]
    if file.nil?
      puts $control.list_all.blue # list []
    elsif item.nil?
      begin
        puts $control.list_help(file) # list [file]
      rescue => e
        puts e.to_s.red
      end
    else
      begin 
        puts $control.show_item(file, item) # list [file] [item]
      rescue => e
        puts e.to_s.red
      end
    end
  end

  desc "version", "show version"
  def version
    invoke :setup
    puts MyHelp::VERSION
  end

  desc "set_editor EDITOR_NAME", "set editor to EDITOR_NAME"
  def set_editor(editor_name)
    invoke :setup
    $control.set_editor(editor_name)
  end

  desc "edit HELP", "edit HELP"
  def edit(help_name)
    invoke :setup
    $control.edit_help(help_name)
  end

  desc "new HELP", "make new HELP"
  def new(help_name)
    invoke :setup
    $control.init_help(help_name)
  end

  desc "delete HELP", "delete HELP"
  def delete(help_name)
    invoke :setup
    $control.delete_help(help_name)
  end
  desc "git [push|pull]", "git push or pull"
  def git(push_or_pull)
    p push_or_pull
    invoke :setup
    dir = $control.local_help_dir
    Dir.chdir(dir) do
      case push_or_pull
      when 'push'
        comms = ['git add -A',
                 "git commit -m 'git push from my_help'",
                 "git push origin master"]
      when 'pull'
        comms = ['git pull origin master']
      else
        raise "my_help git was called by the other than 'push or pull'"
      end
      comms.each do |comm|
        c = command_line(comm)
        puts c.stdout.blue
        puts c.stderr.red
      end
    end
  end

#  desc "search {find_char}", "search FIND_CHAR"
#  def search(find_char)
#    invoke :setup
#    $control.search_help(find_char)
#  end
end

MyCLI.start(ARGV)
